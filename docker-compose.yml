version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: bookdb_postgres
    environment:
      POSTGRES_DB: bookdb
      POSTGRES_USER: authenticator
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5432:5432"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authenticator -d bookdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: bookdb_postgrest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://authenticator:mysecretpassword@postgres:5432/bookdb
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_JWT_SECRET: reallyreallyreallyreallyverysafe
      PGRST_SERVER_CORS_ALLOWED_ORIGINS: "*"
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: node:20-alpine
    container_name: bookdb_frontend
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:3000
    depends_on:
      - postgrest
    stdin_open: true
    tty: true

volumes:
  postgres_data:
